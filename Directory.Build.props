<?xml version="1.0" encoding="UTF-8"?>
<Project>

  <PropertyGroup>
    <ShimakazeSdk_RootFolder>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)'))</ShimakazeSdk_RootFolder>
    <ShimakazeSdk_SourceFolder>$([MSBuild]::NormalizeDirectory('$(ShimakazeSdk_RootFolder)', 'src'))</ShimakazeSdk_SourceFolder>
    <ShimakazeSdk_UnitTestFolder>$([MSBuild]::NormalizeDirectory('$(ShimakazeSdk_RootFolder)', 'test'))</ShimakazeSdk_UnitTestFolder>

    <ShimakazeSdk_IsCSharp>False</ShimakazeSdk_IsCSharp>
    <ShimakazeSdk_IsTest>False</ShimakazeSdk_IsTest>

    <ShimakazeSdk_IsCSharp Condition=" $(MSBuildProjectExtension) == '.csproj' ">True</ShimakazeSdk_IsCSharp>
    <ShimakazeSdk_IsTest Condition=" $(MSBuildProjectFullPath.StartsWith('$(ShimakazeSdk_UnitTestFolder)')) ">True</ShimakazeSdk_IsTest>
  </PropertyGroup>

  <!-- CSharp -->
  <PropertyGroup Condition="$(ShimakazeSdk_IsCSharp)">
    <TargetFrameworks>netstandard2.0;netstandard2.1;net6.0;net8.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <IncludeSymbols>True</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
    <CopyLocalLockFileAssemblies>True</CopyLocalLockFileAssemblies>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <RootNamespace>$(MSBuildProjectName.Replace('.Abstractions', ''))</RootNamespace>

    <EnableNETAnalyzers>True</EnableNETAnalyzers>
    <AnalysisLevel>latest-recommended</AnalysisLevel>

    <!-- Polyfill -->
    <NoWarn Condition="$(TargetFramework.StartsWith('netstandard'))">1701;1702;8601;8604;8767</NoWarn>
    <Nullable Condition="$(TargetFramework.StartsWith('netstandard'))">annotations</Nullable>

    <Authors>Shimakaze Project</Authors>
    <Copyright>Copyright Â© 2020 - $([System.DateTime]::Now.ToString("yyyy")) $(Authors)</Copyright>
    <PackageProjectUrl>https://github.com/ShimakazeProject/Shimakaze.Sdk</PackageProjectUrl>
    <PackageIcon Condition=" '$(IconPath)' != '' ">logo.png</PackageIcon>
    <PackageReadmeFile Condition=" '$(ReadmeFile)' != '' ">ReadMe.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/ShimakazeProject/Shimakaze.Sdk.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <PackageOutputPath>$(ShimakazeSdk_RootFolder)nupkg</PackageOutputPath>

    <IconPath Condition=" '$(IconPath)' == '' AND Exists('$(MSBuildProjectDirectory)\Assets\logo.png')">$(MSBuildProjectDirectory)\Assets\logo.png</IconPath>
    <IconPath Condition=" '$(IconPath)' == '' AND Exists('$(ShimakazeSdk_RootFolder)assets\logo.png')">$(ShimakazeSdk_RootFolder)assets\logo.png</IconPath>
    <ReadmeFile Condition=" '$(ReadmeFile)' == '' AND Exists('$(MSBuildProjectDirectory)\ReadMe.md')">$(MSBuildProjectDirectory)\ReadMe.md</ReadmeFile>
    <ReadmeFile Condition=" '$(ReadmeFile)' == '' AND Exists('$(ShimakazeSdk_RootFolder)ReadMe.md')">$(ShimakazeSdk_RootFolder)ReadMe.md</ReadmeFile>
  </PropertyGroup>

  <ItemGroup Condition="$(ShimakazeSdk_IsCSharp)">
    <None Include="$(IconPath)" Condition=" '$(IconPath)' != '' " Pack="True" PackagePath="\" />
    <None Include="$(ReadmeFile)" Condition=" '$(ReadmeFile)' != '' " Pack="True" PackagePath="\" />
  </ItemGroup>
  
  <ItemGroup Condition="$(ShimakazeSdk_IsCSharp) AND $(MSBuildProjectName) != 'Shimakaze.Sdk.Common' AND $(MSBuildProjectName) != 'Shimakaze.Sdk.Polyfill'" >
    <ProjectReference Include="$(ShimakazeSdk_SourceFolder)Shimakaze.Sdk.Common\Shimakaze.Sdk.Common.csproj" />
  </ItemGroup>

  <ItemGroup Condition="$(ShimakazeSdk_IsCSharp)">
    <PackageReference Include="IDisposableAnalyzers" Version="4.0.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <!-- CSharp Not UnitTest -->
  <ItemGroup Condition="!$(ShimakazeSdk_IsTest)">
    <InternalsVisibleTo Include="$(MSBuildProjectName).Tests" />
  </ItemGroup>

  <!-- CSharp UnitTest -->
  <PropertyGroup Condition="$(ShimakazeSdk_IsTest)">
    <TargetFrameworks>net8.0</TargetFrameworks>
    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>

    <GenerateDocumentationFile>False</GenerateDocumentationFile>
    <GeneratePackageOnBuild>False</GeneratePackageOnBuild>
    <GenerateDocumentationFile>False</GenerateDocumentationFile>
    <CollectCoverage>True</CollectCoverage>
    <CoverletOutputFormat>lcov</CoverletOutputFormat>
    <ExcludeByAttribute>Obsolete,GeneratedCodeAttribute,ExcludeFromCodeCoverageAttribute</ExcludeByAttribute>
  </PropertyGroup>

  <ItemGroup Condition="$(ShimakazeSdk_IsTest)">
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />
    <PackageReference Include="MSTest.TestAdapter" Version="3.1.1" />
    <PackageReference Include="MSTest.TestFramework" Version="3.1.1" />
    <PackageReference Include="coverlet.collector" Version="6.0.0" />
    <PackageReference Include="coverlet.msbuild" Version="6.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="ReportGenerator" Version="5.2.0" />
  </ItemGroup>

  <ItemGroup Condition="$(ShimakazeSdk_IsTest)">
    <ProjectReference Include="$([MSBuild]::NormalizePath('$(ShimakazeSdk_SourceFolder)', '$(MSBuildProjectName.Replace('.Tests', ''))', '$(MSBuildProjectName.Replace('.Tests', '')).csproj'))" />
  </ItemGroup>

  <ItemGroup Condition="$(ShimakazeSdk_IsTest)">
    <None Include="Assets\**\*" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup Condition="$(ShimakazeSdk_IsTest)">
    <Using Include="Microsoft.VisualStudio.TestTools.UnitTesting" />
  </ItemGroup>

</Project>